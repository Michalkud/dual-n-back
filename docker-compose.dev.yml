version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: dual-n-back-db-dev
    environment:
      POSTGRES_DB: dualnback_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./apps/api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dual-n-back-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: dual-n-back-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - dual-n-back-network

  # API Server
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.dev
    container_name: dual-n-back-api-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dev_user:dev_password@postgres:5432/dualnback_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-secret-key-change-in-production
      PORT: 3001
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./apps/api:/app
      - /app/node_modules
      - ./packages/shared:/shared
      - api_logs_dev:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - dual-n-back-network
    command: pnpm dev

  # Web Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: dual-n-back-web-dev
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - ./packages/shared:/shared
    depends_on:
      - api
    networks:
      - dual-n-back-network
    command: pnpm dev

volumes:
  postgres_data_dev:
  redis_data_dev:
  api_logs_dev:

networks:
  dual-n-back-network:
    driver: bridge 